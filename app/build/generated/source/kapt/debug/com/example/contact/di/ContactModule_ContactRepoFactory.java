// Generated by Dagger (https://dagger.dev).
package com.example.contact.di;

import com.example.contact.data.database.dao.ContactDao;
import com.example.contact.domain.repository.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactModule_ContactRepoFactory implements Factory<Repository> {
  private final Provider<ContactDao> contactDaoProvider;

  public ContactModule_ContactRepoFactory(Provider<ContactDao> contactDaoProvider) {
    this.contactDaoProvider = contactDaoProvider;
  }

  @Override
  public Repository get() {
    return contactRepo(contactDaoProvider.get());
  }

  public static ContactModule_ContactRepoFactory create(Provider<ContactDao> contactDaoProvider) {
    return new ContactModule_ContactRepoFactory(contactDaoProvider);
  }

  public static Repository contactRepo(ContactDao contactDao) {
    return Preconditions.checkNotNullFromProvides(ContactModule.INSTANCE.contactRepo(contactDao));
  }
}
