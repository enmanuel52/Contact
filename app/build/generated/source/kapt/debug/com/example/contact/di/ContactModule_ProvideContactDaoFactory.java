// Generated by Dagger (https://dagger.dev).
package com.example.contact.di;

import com.example.contact.data.database.ContactDataBase;
import com.example.contact.data.database.dao.ContactDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactModule_ProvideContactDaoFactory implements Factory<ContactDao> {
  private final Provider<ContactDataBase> dataBaseProvider;

  public ContactModule_ProvideContactDaoFactory(Provider<ContactDataBase> dataBaseProvider) {
    this.dataBaseProvider = dataBaseProvider;
  }

  @Override
  public ContactDao get() {
    return provideContactDao(dataBaseProvider.get());
  }

  public static ContactModule_ProvideContactDaoFactory create(
      Provider<ContactDataBase> dataBaseProvider) {
    return new ContactModule_ProvideContactDaoFactory(dataBaseProvider);
  }

  public static ContactDao provideContactDao(ContactDataBase dataBase) {
    return Preconditions.checkNotNullFromProvides(ContactModule.INSTANCE.provideContactDao(dataBase));
  }
}
