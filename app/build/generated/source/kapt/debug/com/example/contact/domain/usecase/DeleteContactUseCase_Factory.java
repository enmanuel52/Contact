// Generated by Dagger (https://dagger.dev).
package com.example.contact.domain.usecase;

import com.example.contact.data.ContactRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteContactUseCase_Factory implements Factory<DeleteContactUseCase> {
  private final Provider<ContactRepository> repositoryProvider;

  public DeleteContactUseCase_Factory(Provider<ContactRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public DeleteContactUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static DeleteContactUseCase_Factory create(
      Provider<ContactRepository> repositoryProvider) {
    return new DeleteContactUseCase_Factory(repositoryProvider);
  }

  public static DeleteContactUseCase newInstance(ContactRepository repository) {
    return new DeleteContactUseCase(repository);
  }
}
